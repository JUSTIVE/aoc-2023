import { A, AR, R, S, pipe } from "@mobily/ts-belt";
import fetch from 'node-fetch'

export test_ := (input: unknown, expected: unknown) =>
  JSON.stringify input is JSON.stringify expected ? "PASS" : "FAIL"
  |>console.log

export const getSource = async (day: number) =>
  R.fromPromise(
    fetch(`https://adventofcode.com/2023/day/${day}/input`, {
      headers: {
        cookie: `session=${process.env.SESSION}`,
      },
    })
  )
  |>AR.flatMap((res: Response) => 
    R.fromPromise(res.text())
  )
  |>AR.map S.trim
  |>AR.getWithDefault ""


export getSourceLines := async (day: number) =>
  await getSource day
  |>S.split "\n"

export sum := A.reduce<number, number>(0, (acc, curr) => acc + curr);

export problem := async (
  day: number,
  logic: (lines: readonly string[]) => string | number
) => 
  await getSourceLines(day)
  |>logic
  |>console.log
